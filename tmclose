#! /bin/bash

# tmclose
# Author: Austin Burt
# Email: austin@burt.us.com
# Date: 4/5/19
# github: github.com/arburty/tmsetup-commnand

declare -r PROGRAM=$(basename $0)


mySession() {
    name=$(tmux list-sessions | grep \(attached\)$ | cut -d ":" -f 1)
    echo $name
}

isValidSession() {
    # if it's not a session, its invalid.
    # let the tmux error print as a warning
    tmux has-session -t $1 || return 1
}

killSession() {
    isValidSession $1 && echo "Killing: $1" && tmux kill-session -t $1
}

getOtherSessions(){
    tmux list-sessions -F '#S' | grep -v "$mine"
}

getAllSessions() {
    echo "$(getOtherSessions) $(mySession)"
}

kill_others() {
    # kill all other sessions that are not mine
    otherSessions=$(getOtherSessions)
    while read currSession
    do
        name=$currSession
        sleep 0.5
        killSession $name
    done < <( echo "$otherSessions" )
}

kill_mine() {
    # kill the session I am in last
    echo "Killing Session You Are In!"
    sleep 2
    killSession $mine

}

kill_all() {
    kill_others
    kill_mine
}

kill_list() {
    while [[ $# -gt 0 ]]; do
        killSession $1
        shift
    done
}

select_sessions() {
    PS3="What sessions(s) do you want to delete? "
    select closeSession in $(echo "$(getAllSessions) --all --others --done")
    do
        case $closeSession in
            --all    ) kill_all ; break ;;
            --others ) kill_others ; break ;;
            --done   ) break ;;
            *        ) killSession $closeSession ;;
        esac
    done
}

# Main {
# TODO: Add method to pick sessions interactively

mine=$(mySession)
[[ $# -eq 0 ]] && kill_mine
case $1 in
    -o ) kill_others     ;;
    -a ) kill_all        ;;
    -s ) select_sessions ;;
    *  ) kill_list "$@"  ;;
esac # {

exit 0
